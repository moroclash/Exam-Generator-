/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import hci_project.ExamInfo;
import hci_project.Question;
import hci_project.management;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.TitledBorder;
import javax.xml.parsers.ParserConfigurationException;

/**
 *
 * @author moroclash
 */
public class Add_Question extends javax.swing.JPanel {

    /**
     * Creates new form Add_Question
     */
    private Question Q;
    private String subjectname;
    private int fla;
    public Add_Question(Question QQ,ArrayList<String> subjects,String ownSubject,int flage) {
        /*
            if flage is 1 : Add
            if flage is 2 : update
        */
        this.fla=flage;
        initComponents();
        this.subjectname = ownSubject;
        ErrorMassage.setText("");
        this.Q = QQ;
        if(flage==1) //to Add
        {
            jTextArea1.setText("");
            jTextArea2.setText("");
            jTextArea3.setText("");
            jTextArea4.setText("");
            jTextArea5.setText("");
            jTextArea6.setText("");
               
            jComboBox2.setVisible(false);
            jLabel10.setText(ownSubject);
        }
        else // to update
        {
            TitledBorder titel = new TitledBorder("Update Question");
            titel.setTitleFont(new Font("tahoma", Font.BOLD, 24));
            this.setBorder(titel);
            jTextArea1.setText(Q.getQbody());
            String arr[] = Q.getAnswers();
            String a1=arr[0],a2=arr[1],a3=arr[2];
            if(Q.getMSQ()[0].equals(a1) || Q.getMSQ()[0].equals(a2) || Q.getMSQ()[0].equals(a3))
                jCheckBox1.setSelected(true);
            if(Q.getMSQ()[1].equals(a1) || Q.getMSQ()[1].equals(a2) || Q.getMSQ()[1].equals(a3))
                jCheckBox3.setSelected(true);
            if(Q.getMSQ()[2].equals(a1) || Q.getMSQ()[2].equals(a2) || Q.getMSQ()[2].equals(a3))
                jCheckBox2.setSelected(true);
            if(Q.getMSQ()[3].equals(a1) || Q.getMSQ()[3].equals(a2) || Q.getMSQ()[3].equals(a3))
                jCheckBox5.setSelected(true);
            if(Q.getMSQ()[4].equals(a1) || Q.getMSQ()[4].equals(a2) || Q.getMSQ()[4].equals(a3))
                jCheckBox4.setSelected(true);
            jTextArea2.setText(Q.getMSQ()[3]);
            jTextArea3.setText(Q.getMSQ()[4]);
            jTextArea4.setText(Q.getMSQ()[2]);
            jTextArea5.setText(Q.getMSQ()[0]);
            jTextArea6.setText(Q.getMSQ()[1]);
            jComboBox1.setSelectedIndex(Q.getQlevel()-1);
            for(int i=0 ;i<subjects.size() ;i++)
            {
                jComboBox2.addItem(subjects.get(i));
            }
            jComboBox2.setSelectedItem(ownSubject);
            jButton1.setText("Update");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        ErrorMassage = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(195, 239, 169));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Question", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("FreeSerif", 1, 24))); // NOI18N
        setPreferredSize(new java.awt.Dimension(925, 626));
        setLayout(null);

        jLabel1.setText("Question Body :-");
        add(jLabel1);
        jLabel1.setBounds(20, 40, 137, 26);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 893, 103);

        jLabel2.setText("Answer 1 : ");
        add(jLabel2);
        jLabel2.setBounds(30, 220, 91, 18);

        jLabel3.setText("Answer 2 : ");
        add(jLabel3);
        jLabel3.setBounds(30, 280, 91, 18);

        jLabel4.setText("Answer 3 : ");
        add(jLabel4);
        jLabel4.setBounds(30, 340, 91, 18);

        jLabel5.setText("Answer 4 : ");
        add(jLabel5);
        jLabel5.setBounds(30, 400, 91, 18);

        jLabel6.setText("jLabel2");
        add(jLabel6);
        jLabel6.setBounds(67, 260, 57, 0);

        jLabel7.setText("Answer 5 : ");
        add(jLabel7);
        jLabel7.setBounds(30, 450, 91, 18);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        add(jScrollPane2);
        jScrollPane2.setBounds(140, 390, 486, 47);

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        add(jScrollPane3);
        jScrollPane3.setBounds(140, 450, 486, 47);

        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        add(jScrollPane4);
        jScrollPane4.setBounds(140, 330, 486, 47);

        jTextArea5.setColumns(20);
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jScrollPane5.setViewportView(jTextArea5);

        add(jScrollPane5);
        jScrollPane5.setBounds(140, 210, 486, 47);

        jTextArea6.setColumns(20);
        jTextArea6.setLineWrap(true);
        jTextArea6.setRows(5);
        jScrollPane6.setViewportView(jTextArea6);

        add(jScrollPane6);
        jScrollPane6.setBounds(140, 270, 486, 47);

        jLabel8.setText("Select right answer :");
        add(jLabel8);
        jLabel8.setBounds(650, 200, 168, 27);

        jCheckBox1.setText("Right");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        add(jCheckBox1);
        jCheckBox1.setBounds(670, 230, 69, 23);

        jCheckBox2.setText("Right");
        add(jCheckBox2);
        jCheckBox2.setBounds(670, 340, 69, 23);

        jCheckBox3.setText("Right");
        add(jCheckBox3);
        jCheckBox3.setBounds(670, 280, 69, 23);

        jCheckBox4.setText("Right");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        add(jCheckBox4);
        jCheckBox4.setBounds(670, 450, 69, 23);

        jCheckBox5.setText("Right");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        add(jCheckBox5);
        jCheckBox5.setBounds(670, 400, 69, 23);

        jLabel9.setText("difficulty level : ");
        add(jLabel9);
        jLabel9.setBounds(20, 510, 131, 27);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard" }));
        add(jComboBox1);
        jComboBox1.setBounds(170, 510, 98, 30);

        jLabel10.setText("Subject : ");
        add(jLabel10);
        jLabel10.setBounds(310, 520, 76, 18);

        add(jComboBox2);
        jComboBox2.setBounds(400, 510, 130, 30);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(670, 490, 261, 64);

        ErrorMassage.setText("Error Masage");
        add(ErrorMassage);
        ErrorMassage.setBounds(151, 540, 400, 27);

        jButton2.setText("Backe");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(760, 40, 150, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            ArrayList<ExamInfo> a= management.SubjectExams((String)jComboBox1.getSelectedItem());
            ArrayList<String> s = new ArrayList<>();
            for(ExamInfo x : a)
            {
                s.add(x.getExamname());
            }
         Search_frame show = new Search_frame(subjectname,Integer.toString(management.QuestionsNumber(subjectname,"data/Data.xml")), s);
         show.setBounds(0, 0,1048, 660);
        this.setVisible(false);
        this.removeAll();
        this.add(show);
        this.repaint();
        this.setVisible(true);
        show.setVisible(true);
        }catch(Exception ex){System.out.println("Error in function ShowQuestionForm in line 115 <_>");}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         if(jTextArea1.getText().equals("")||jTextArea1.getText().equals(" "))
         {
             ErrorMassage.setForeground(Color.red);
             ErrorMassage.setText("please wright Question and Answer-_-");
         }
         else{
         int n =0,x;
         boolean a6=false,a2=false,a3=false,a4=false,a5=false;
         if(!jTextArea2.getText().equals(""))
         {
            for(x=0;x<jTextArea2.getText().length();x++)
            {
                 if(jTextArea2.getText().charAt(x) != ' ')
                 {
                     a2=true;
                     n++;
                     break;
                 }
            }
         }
         if(!jTextArea3.getText().equals(""))
         {
            for(x=0;x<jTextArea3.getText().length();x++)
            {
                 if(jTextArea3.getText().charAt(x) != ' ')
                 {
                     a3=true;
                     n++;
                   break;
                 }
            }
         }
        if(!jTextArea4.getText().equals(""))
         {
            for(x=0;x<jTextArea4.getText().length();x++)
            {
                 if(jTextArea4.getText().charAt(x) != ' ')
                     {
                        a4=true;
                        n++;
                        break;
                    }
            }
         }
        if(!jTextArea5.getText().equals(""))
         {
            for(x=0;x<jTextArea5.getText().length();x++)
            {
                 if(jTextArea5.getText().charAt(x) != ' ')
                 {
                     a5=true;
                     n++;
                     break;
                 }
            }
         }
        if(!jTextArea6.getText().equals(""))
         {
            for(x=0;x<jTextArea6.getText().length();x++)
            {
                 if(jTextArea6.getText().charAt(x) != ' ')
                 {
                     a6=true;
                     n++;
                     break;
                 }
            }
         }

         if(n<2)
         {
             ErrorMassage.setForeground(Color.red);
             ErrorMassage.setText("please wright more than Tow Answer -_-");
         }
         else if(jTextArea1.getText().equals("")||jTextArea1.getText().equals(" "))/*start validation if*/
         {
             ErrorMassage.setForeground(Color.red);
             ErrorMassage.setText("please wright Question Body -_-");
         }
        else{
            Question q = new Question();
            q.setQbody(jTextArea1.getText());
            String s[] = new String[5];
            s[0]=jTextArea5.getText(); s[1]=jTextArea6.getText(); s[2]=jTextArea4.getText(); s[3]= jTextArea2.getText(); s[4]=jTextArea3.getText() ;
            q.setMSQ(s);
            String a[]=new String[3];
            int i=1;
            if(jCheckBox1.isSelected()&&a5)
            {
                a[i-1] = jTextArea5.getText();
                i++;
            }
            if(jCheckBox3.isSelected()&&a6)
            {
                a[i-1] = jTextArea6.getText();
                i++;
            }
            if(jCheckBox2.isSelected()&&a4)
            {
                a[i-1] = jTextArea4.getText();
                i++;
            }
           
            if(jCheckBox5.isSelected()&&a2)
            {
                if(i<4)
                    a[i-1] = jTextArea2.getText();
                i++;
            }
            if(jCheckBox4.isSelected()&&a3)
            {
                if(i<4)
                    a[i-1] = jTextArea3.getText();
                i++;
            }
            if((jCheckBox4.isSelected()&&!a3)||(jCheckBox5.isSelected()&&!a2)||(jCheckBox2.isSelected()&&!a4)||(jCheckBox3.isSelected()&&!a6)||(jCheckBox1.isSelected()&&!a5))
            {
                ErrorMassage.setForeground(Color.red);
                ErrorMassage.setText("please select Ansswers that has Text-_-");
            }
            else if(n==i-1)
            {
                ErrorMassage.setForeground(Color.red);
                ErrorMassage.setText("please select right Answers less than choise -_-");
            }
            else if(i==1)
            {
                ErrorMassage.setForeground(Color.red);
                ErrorMassage.setText("please select Ansswers -_-");
            }
            else if(i>4||i==5)
            {
                ErrorMassage.setForeground(Color.red);
                ErrorMassage.setText("please select Ansswers less than or equla 3  -_-");
            }
            else{
                    q.setAnswers(a);
                    q.setQlevel(jComboBox1.getSelectedIndex()+1);
                    /*Start Add*/
                   if(evt.getActionCommand().equals("Add"))
                   {
                        q.setSubjctID(subjectname);
                        management.add_question(q, subjectname, "data/Data.xml");
                        ErrorMassage.setForeground(Color.GREEN);
                        ErrorMassage.setText("Add is Successfull ^_^");
                        reset();
                   }
                   /*end Add*/
                   /*start update*/
                   if(evt.getActionCommand().equals("Update"))
                   {
                      q.setSubjctID((String) jComboBox2.getSelectedItem());
                      if(subjectname.equals(q.getSubjctID()))
                      {
                          management.updateQuestion(q, subjectname , Q.getId() , "data/Data.xml");
                          
                      }
                      else
                      {
                          try {
                              management.Delete(subjectname,Integer.toString(Q.getId()), "data/Data.xml");
                              management.add_question(q,q.getSubjctID(),"data/Data.xml");
                              } catch (Exception ex) {
                                  System.out.println("Error in function Add_Question line 360");
                              }
                      }
                      ErrorMassage.setForeground(Color.GREEN);
                      ErrorMassage.setText("Update is Successfull ^_^");
                   }
                   /*end update*/
                    
                   
                }
    }/*end validation else*/
         }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void reset()
    {
                        jTextArea1.setText("");
                        jTextArea2.setText("");
                        jTextArea3.setText("");
                        jTextArea4.setText("");
                        jTextArea5.setText("");
                        jTextArea6.setText("");
                        jComboBox1.setSelectedIndex(0);
                        jCheckBox1.setSelected(false);
                        jCheckBox2.setSelected(false);
                        jCheckBox3.setSelected(false);
                        jCheckBox4.setSelected(false);
                        jCheckBox5.setSelected(false);
    }
    
    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ErrorMassage;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    // End of variables declaration//GEN-END:variables
}
